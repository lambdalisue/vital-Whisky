*Vital/Vim/Buffer/Opener.txt*		A vital module for opening buffers

Author : Alisue <lambdalisue@hashnote.net>
DEPRECATED


=============================================================================
CONTENTS				*Vital.Vim.Buffer.Opener-content*

INTRODUCTION			|Vital.Vim.Buffer.Opener-introduction|
USAGE				|Vital.Vim.Buffer.Opener-usage|
INTERFACE			|Vital.Vim.Buffer.Opener-interface|


=============================================================================
INTRODUCTION				*Vital.Vim.Buffer.Opener-introduction*

*Vital.Vim.Buffer.Opener* is a simple library to open a buffer.
Not like |Vital.Vim.Buffer.open()| or |Vital.Vim.BufferManager-Manager.open()|,
it makes sure that the current focus is on a buffer specified even an opener
for preview window (such as |pedit|) has used.


=============================================================================
USAGE					*Vital.Vim.Buffer.Opener-usage*

Following example directly use |append()| function just after opening a
buffer.
>
	let s:Opener = vital#vital#import('Vim.Buffer.Opener')

	function! s:open_pseudo_file(opener) abort
	  let config = { 'opener': a:opener }
	  let context = s:Opener.open('a pseudo file', config)

	  " The focus is on a target buffer even an opener for preview window
	  " such as 'pedit' has specified so using append() directly is safe.
	  call append(line('$'), ['This is a pseudo content'])

	  " Focus back if necessary
	  call context.end()
	endfunction

	command! -nargs=* OpenPseudoFile call s:open_pseudo_file(<q-args>)
<
Basically when {opener} is an opener for preview window (e.g |pedit|), |append()|
will be pefromed on a wrong buffer because |pedit| does not move the focus to a
opened buffer.
Using |Vital.Vim.Buffer.Opener| solve this issue by focusing a specified
buffer even the buffer is a |previewwindow|.


=============================================================================
INTERFACE				*Vital.Vim.Buffer.Opener-interface*

			*Vital.Vim.Buffer.Opener.open()*
open({buffer}[, {config}])
	Open a {buffer} with a mannar specified by {config}.
	Note that when there is a swap file, user is requested to choose an
	action and |E325|| exception will be cached and ignored.
	The following attributes are allowed for {config}:

	"mods"
	A command modifiers (<mods>) such as |vertical|.

	"opener"
	An opener string such as "edit" or "split". If an opener for preview
	window (e.g. |pedit|) has specified, it removes the "group" config
	specified.
	The default value is "edit".

	"group"
	A window group name. If a group name is specified, it tries to reuse
	the same group name window and ignore "opener" if a same group name
	window is found. Note that if an opener for preview window (e.g
	|pedit|) has specified, the value of "group" is ignored.
	The default value is "".

	"range"
	A range used to find a same group name window. Available values are
	"tabpage" and "all".
	The default value is "tabpage".

	"force"
	If 1, a specified {buffer} is focused even an opener for preview
	window has used. To focus back, call "context.end()" method.

	This function returns a {context} dictionary which has the following
	attributes and method:

	"preview"
	1 or 0, if a specified {buffer} is opened as a previewwindow.

	"bufloaded"
	A value of |bufloaded| for a {buffer} before open. So that 0 means the
	buffer was not loaded and has loaded with this function.

	"bufexists"
	A value of |bufexists| for a {buffer} before open. So that 0 means the
	buffer did not exist and has created with this function.

	"bufnr"
	A buffer number of a {buffer}. It is a correct value even for an
	opener for preview window.

	"bufname"
	A buffer name of a {buffer}. It is a correct value even for an opener
	for preview window.

	"focusto"
	May exist. It is a buffer number and indicate that the focus should
	be moved into that buffer when "context.end()" is called.

	"end()"
	A method which focus back to "focusto" buffer. It does nothing if no
	focus back is required.

			*Vital.Vim.Buffer.Opener.is_preview_openr()*
is_preview_opener{opener})
	Return if the {opener} is for preview window.


=============================================================================
vim:tw=78:fo=tcq2mM:ts=8:ft=help:norl
