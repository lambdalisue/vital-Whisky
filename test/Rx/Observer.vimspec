Describe Rx.Observer
  Before
    let Observer = healthcheck#vital#import('Rx.Observer')
    set verbose=1
  End

  After
    set verbose=0
  End

  Describe .new()
    Before
      let callback = {
            \ 'next': { -> 0 },
            \ 'error': { -> 0 },
            \ 'complete': { -> 0 },
            \}
    End

    It returns an Observer instance
      let b = Observer.new()
      Assert KeyExists(b, 'next')
      Assert KeyExists(b, 'error')
      Assert KeyExists(b, 'complete')
      Assert IsFunc(b.next)
      Assert IsFunc(b.error)
      Assert IsFunc(b.complete)
    End

    Describe from a given object
      It returns an Observer instance with a given next method
        let b = Observer.new({ 'next': callback.next })
        Assert Same(b.next, callback.next)
        Assert NotSame(b.error, callback.error)
        Assert NotSame(b.complete, callback.complete)
      End

      It returns an Observer instance with a given error method
        let b = Observer.new({ 'error': callback.error })
        Assert NotSame(b.next, callback.next)
        Assert Same(b.error, callback.error)
        Assert NotSame(b.complete, callback.complete)
      End

      It returns an Observer instance with a given complete method
        let b = Observer.new({ 'complete': callback.complete })
        Assert NotSame(b.next, callback.next)
        Assert NotSame(b.error, callback.error)
        Assert Same(b.complete, callback.complete)
      End
    End

    Describe from given functions
      It returns an Observer instance with a given function
        let b = Observer.new(callback.next)
        Assert Same(b.next, callback.next)
        Assert NotSame(b.error, callback.error)
        Assert NotSame(b.complete, callback.complete)
      End

      It returns an Observer instance with given two functions
        let b = Observer.new(callback.next, callback.error)
        Assert Same(b.next, callback.next)
        Assert Same(b.error, callback.error)
        Assert NotSame(b.complete, callback.complete)
      End

      It returns an Observer instance with given three functions
        let b = Observer.new(callback.next, callback.error, callback.complete)
        Assert Same(b.next, callback.next)
        Assert Same(b.error, callback.error)
        Assert Same(b.complete, callback.complete)
      End
    End
  End
End

